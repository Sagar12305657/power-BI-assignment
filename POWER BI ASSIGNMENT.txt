POWER BI ASSIGNMENT

1) What is Power BI and how does it differ from Excel?
> Difference between Power BI and Excel 
Power BI :- 1. Designed for business intelligence, data visualization, and dashboard creation.
2. Can handle large datasets efficiently using the Power BI engine.
3. Connects to multiple sources (SQL, cloud services, APIs, etc.) and handles real-time data.
4. Uses Power Query for ETL (Extract, Transform, Load) and DAX (Data Analysis Expressions) for calculations.
5. Advanced, interactive dashboards and reports with drill-down features. 
Excel :- 1. Used for spreadsheet-based calculations, data analysis, and financial modelling.
2. Struggles with large datasets; performance can slow down.
3. Primarily works with structured data in spreadsheets.
4. Uses formulas, functions, and PivotTables for analysis.
5. Charts and graphs, but limited interactivity.  


2)  Explain the concept of data modeling in Power BI.
> Data modeling in Power BI is the process of structuring and organizing data from multiple sources to create meaningful relationships and enable efficient analysis. It involves defining how tables interact with each other through relationships, using calculated columns, measures, and hierarchies to enhance data insights.
> Power BI allows users to connect multiple tables using relationships (similar to a relational database).
> Each table should have a Primary Key (a unique identifier).
> Power BI uses DAX formulas to create calculated columns, measures, and custom aggregations. 
> Cleaning and transforming data before loading into the model (e.g., merging, filtering, renaming columns.)


3) What are the different types of connections available in Power BI?
> Power BI supports different connection types based on performance, refresh frequency, and data size. The main connection modes are:
> Import Mode :- Loads data into Power BI s memory for fast query performance.
> Direct query mode :- Queries data directly from the source in real-time without storing it in Power BI.
> Composite mode :- Combines Import Mode (for frequently used data) and DirectQuery Mode (for real-time needs).
> Live Connection :- Similar to DirectQuery but used mainly for SQL Server Analysis Services (SSAS).
> Dataverse Connection :- Connects Power BI to Microsoft Dataverse, commonly used in Power Apps.


4) How do you handle data transformation in Power BI?
> Data transformation in Power BI is done using Power Query Editor, which allows you to clean, shape, and modify data before loading it into the data model. Here s how you can handle data transformation:
> 1. Importing Data
Connect to different data sources (Excel, SQL, APIs, etc.).
Load data into Power Query Editor for transformation.
> 2. Cleaning Data
Remove duplicates   Eliminate duplicate rows to ensure data consistency.
Handle missing values   Replace null values with default values or remove them.
Change data types   Convert columns to appropriate types (text, numbers, dates, etc.).
Trim and clean text   Remove unnecessary spaces and special characters.
> 3. Shaping Data
Rename columns   Make column names more meaningful.
Remove unnecessary columns   Keep only relevant data to optimize performance.
Split columns   Divide text data into multiple columns (e.g., splitting "Full Name" into "First Name" and "Last Name").
Merge columns   Combine multiple columns into one.
> 4. Creating New Columns
Custom Columns   Use formulas to create new columns based on existing data.
Conditional Columns   Apply IF-THEN logic to derive new values.
> 5. Aggregating & Summarizing Data
Grouping data   Summarize data based on categories.
Pivoting and unpivoting data   Reshape data for better analysis.


5)  What is DAX (Data Analysis Expressions) and why is it important in Power BI?
> DAX (Data Analysis Expressions) is a formula language used in Power BI, Power Pivot, and SSAS (SQL Server Analysis Services) to create custom calculations, aggregations, and business logic for data analysis. It is similar to Excel formulas but is more powerful and optimized for working with relational data and large datasets.


6) Can you explain the difference between calculated columns and measures in Power BI?
> Calculated Columns: Create a new column in a table, calculated for each row.
Measures: Perform dynamic calculations based on user interactions in reports.
> Storage:
Calculated Columns: Stored in the data model, increasing file size.
Measures: Not stored; calculated on the fly, improving performance.
> Context:
Calculated Columns: Works at the row level (row context).
Measures: Works at the aggregation level (filter/context-based).


7) How do you handle relationships between tables in Power BI?
> 1. Creating Relationships
Go to Model View in Power BI.
Drag and drop columns to establish a relationship between tables.
Use Manage Relationships to create or edit relationships manually.
> 2. Types of Relationships
One-to-Many (1:M) [Most Common]
One record in Table A relates to multiple records in Table B.
Example: One Customer ? Multiple Sales Orders.
Many-to-Many (M:M)
Multiple records in Table A relate to multiple records in Table B.
Requires a bridge table for better performance.
Example: Products sold in multiple stores.
One-to-One (1:1)
Each record in Table A has exactly one matching record in Table B.
Example: Employee ID in Employee Details and Salary Table.
> 3. Relationship Cardinality & Properties
Single or Both Directions:
Single-direction (default) ? Data filters from one table to another.
Both-direction (bi-directional) ? Allows filtering in both directions (use cautiously).
Active vs. Inactive Relationships:
Active relationships are used by default in calculations.
Inactive relationships can be activated using USERELATIONSHIP() in DAX.


8) What is the purpose of a Power BI Gateway?
Purpose of Power BI Gateway:
> 1)Enables Data Refresh
Allows scheduled or live refresh of reports with on-premises data.
> 2)Live Data Connectivity
Supports Direct Query and Live Connection to keep reports updated in real time.
> 3)Secure Data Access
Ensures data remains within the network and is securely transferred to Power BI.
> 4)Supports Multiple Services
Works not just for Power BI but also for Power Apps, Power Automate, and Azure Analysis Services.
> 5)Centralized Control
IT admins can manage who can access on-premises data sources securely.


9) How can you schedule data refresh in Power BI Service?
> 1. Publish Report
Upload your Power BI Desktop (.pbix) file to Power BI Service.
> 2?. Go to Dataset Settings
In Power BI Service, navigate to Workspaces ? Datasets ? Select Dataset.
Click on  Scheduled Refresh  under Settings.
> 3?. Configure Data Gateway (If Needed)
If using on-premises data, ensure Power BI Gateway is installed and configured.
> 4?. Set Refresh Frequency
Choose Daily, Weekly, or Multiple Times a Day (up to 8 times for Pro users, 48 for Premium).
Define time slots for refresh.
> 5?. Enter Credentials
Provide authentication details for the data source.


10) Explain the concept of row-level security in Power BI.
> Row-Level Security (RLS) is a feature in Power BI that restricts data access for different users based on their roles. It ensures that users see only the data relevant to them.
> 1?. Create Roles in Power BI Desktop
Use DAX filters to define access rules.
Example:
DAX
[Region] = "West"
This restricts users to see only data for the West region.
> 2?. Assign Roles in Power BI Service
After publishing the report, assign specific users or groups to roles in Power BI Service.
> 3?. Dynamic RLS (Advanced)
Uses USERPRINCIPALNAME() to filter data dynamically based on logged-in user.
Example:
DAX
[Email] = USERPRINCIPALNAME()
This ensures each user sees only their own data. Row-Level Security (RLS) is a feature in Power BI that restricts data access for different users based on their roles. It ensures that users see only the data relevant to them.


11) What is the Power BI Desktop and how does it differ from Power BI Service?
> 1?. Power BI Desktop is used for creating reports, while Power BI Service is used for sharing & collaboration.
> 2?. Power BI Service allows cloud-based automatic refresh, whereas Power BI Desktop requires manual updates.
> 3?. Reports created in Power BI Desktop need to be published to Power BI Service for sharing.
> Use Power BI Desktop for development & modelling, and Power BI Service for deployment & collaboration!


12) Explain the concept of Direct Query in Power BI?
> Direct Query is a data connectivity mode in Power BI that allows reports to query the database in real-time without importing data into Power BI. Instead of storing data, Power BI sends queries directly to the data source whenever a user interacts with the report.


13) What are Power BI templates and how are they useful?
> Power BI templates (.PBIT files) are pre-configured Power BI reports that include:
> Report layout & visuals.
>  Data model & relationships.
>  DAX calculations.


14) How do you handle incremental data refresh in Power BI?
Steps to Implement Incremental Data Refresh in Power BI
> 1.Enable Parameters for Filtering Data In Power Query, create two parameters:
Range Start: Start date for incremental refresh.
Range End: End date for incremental refresh.
These parameters should be Date/Time type.
> 2.Filter Data Using Parameters
Apply a date filter on a datetime column (e.g., Transaction Date).
Use Range Start and Range End to filter rows within the selected range.
> 3.Configure Incremental Refresh Settings
After loading data into Power BI, go to Modeling > Data source settings > Incremental Refresh.
Enable incremental refresh for the dataset.
Set the following options:
Store data for X years/months (e.g., store only the last 5 years of data).
Only refresh data from the last X days/months (e.g., refresh only the last 1 month of data).
> 4.Publish to Power BI Service
Incremental refresh only works in Power BI Service, not in Power BI Desktop.
Publish your report and refresh it in Power BI Service.


15) What is the role of Power Query in Power BI?
> Role of Power Query in Power BI
> Power Query is a data transformation and preparation tool in Power BI that allows users to extract, clean, and shape data before loading it into the Power BI data model. It is an essential component for ETL (Extract, Transform, Load) processes.


16) Explain the difference between calculated columns and calculated tables in Power BI.?
> 1. Definition
Calculated Column: A new column created within an existing table using a DAX expression.
Calculated Table: A new table created using a DAX formula, independent of existing tables.
> 2. Scope
Calculated Column: Works at the row level within a single table.
Calculated Table: Works at the table level, creating a new dataset.
> 3. Context
Calculated Column: Operates in row context (each row is evaluated separately).
Calculated Table: Operates in table context (entire table is evaluated as a whole).
> 4. Storage
Calculated Column: Stored within the existing table.
Calculated Table: Stored as a separate table in the data model.
> 5. Performance Impact
Calculated Column: Increases memory usage, especially in large datasets.
Calculated Table: Can improve performance when pre-aggregating data but increases model size.


17) How do you create custom visuals in Power BI?
> Creating custom visuals in Power BI allows you to design unique charts, graphs, or visual representations that are not available in the default Power BI visual library. You can create custom visuals using TypeScript and D3.js with the Power BI Custom Visuals SDK.


18) What are the best practices for optimizing performance in Power BI?
> 1. Optimize Data Model
 Use Star Schema instead of a flat table for better performance.
 Remove unnecessary columns and tables to reduce memory usage.
 Reduce cardinality by grouping data where possible (e.g., rounding timestamps).
 Use summarized tables instead of raw transactional data when possible.
> 2. Optimize DAX Calculations
 Avoid using CALCULATE() inside iterators (e.g., SUMX).
 Replace IF statements with SWITCH for better efficiency.
 Use variables (VAR) to avoid repeated calculations.
 Prefer SUM and COUNT over SUMX and COUNTX, unless necessary.
> 3. Improve Query Performance
 Enable Query Folding so transformations are pushed to the data source.
 Use native SQL queries instead of complex transformations in Power Query.
 Filter data at the source instead of in Power BI.
> 4. Optimize Data Refresh
 Use Incremental Refresh instead of refreshing the entire dataset.
 Disable Auto Date/Time feature to reduce unnecessary hidden tables.
 Optimize data source connections (Direct Query vs. Import vs. Hybrid mode).
> 5. Reduce Visual Complexity
 Limit the number of visuals on a page (~8-10 visuals per page is ideal).
 Use aggregated data instead of detailed row-level data in visuals.
 Avoid excessive slicers and cross-filtering, as they slow performance.


19) How can you integrate Power BI with other Microsoft products like Azure and Office 365?
> 1. Integration with Azure
> a) Azure SQL Database & Azure Synapse Analytics
 Connect Power BI to Azure SQL Database or Azure Synapse Analytics for scalable data analysis.
 Use Direct Query for real-time data access.
 Implement Azure Analysis Services for complex data modeling.
> b) Azure Data Factory
 Automate ETL processes and load data into Power BI.
 Schedule data refreshes using Data Factory Pipelines.
> c) Azure Data Lake
 Store large datasets in Azure Data Lake Storage (ADLS) and connect Power BI for analytics.
 Use Power Query to fetch and transform data from ADLS.
> d) Azure Machine Learning (Azure ML)
 Integrate Azure ML models into Power BI to apply predictive analytics.
 Use AI visuals like Key Influencers & Forecasting.
> 2. Integration with Office 365
> a) Power BI & Excel
 Import Excel workbooks into Power BI for advanced visualization.
 Use Analyze in Excel to connect Power BI datasets with PivotTables.
> b) SharePoint & OneDrive
 Publish Power BI reports directly to SharePoint Online for seamless access.
 Connect Power BI to OneDrive for Business for automatic file syncing.
> c) Power Automate & Power Apps
 Use Power Automate to trigger alerts & automate workflows based on Power BI insights.
 Embed Power BI reports inside Power Apps for interactive data-driven applications.


20) Explain the concept of aggregations in Power BI.?
> Aggregations involve pre-summarizing data at a higher level (e.g., monthly sales instead of daily sales) to reduce the amount of data that needs to be processed during queries.
> For example:
> A dataset with 100 million sales transactions can be aggregated at the category or region level, reducing query time significantly.
> Types of Aggregations
>  Implicit Aggregations   Automatically applied when using default aggregations in Power BI (e.g., SUM, AVG, COUNT).
>  Explicit Aggregations   Custom aggregations created using DAX measures (e.g., SUMX, AVERAGEX).
>  Pre-Aggregated Tables   Storing summarized data in a separate table for faster performance.


21) How do you handle error handling and data quality in Power BI?
> Handling Errors in Power Query
>  Use "Remove Errors" Option   Removes rows with errors in Power Query.
>  Replace Errors   Replace error values with a default value using the Replace Errors function.
>  Try Otherwise Function   Catches errors and replaces them with an alternative value.


22) What is the purpose of Power BI Embedded and when would you use it?
> Purpose of Power BI Embedded
>  Embed interactive reports & dashboards into third-party applications.
>  Provide data insights to users without requiring a Power BI license.
>  Enhance customer experience by offering analytics within apps.
>  Enable white-labeling   Customize reports to match your brand.
>  Control user access   Securely manage authentication and data access.

    
